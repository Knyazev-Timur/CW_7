name: Build and deploy workflow
on:
  push:
    branches: ["main"]

jobs:
  build_and_push:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS  }}
          logout: true

      - name: Build and Push Container
        run: |-
          docker build -t charfull/cw_7:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
          docker push charfull/cw_7:$GITHUB_REF_NAME-$GITHUB_RUN_ID

  deploy:
    needs: build_and_push
    runs-on: ubuntu-20.04
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      POSTGRES_PASSWORD: ${{ secrets.PASSWORD }}
      POSTGRES_USER: ${{ secrets.USERNAME }}
    steps:
      - name: Clone Code
        uses: actions/checkout@v3.5.2

      - name: Render configs
        run: |-
          mkdir deploy
          cat docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml

      # ========= BEGIN SSH EXIT ==========
      - name: Copy on Server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST}}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "deploy/docker-compose.yaml"
          target: "deploy"
          strip_components: 1

      # ========== START DOCKER CONTAINER ==========
#      - name: deploy app
#        uses: appleboy/ssh-action@v0.1.10
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.SSH_USER }}
#          password: ${{ secrets.SSH_PASSWORD }}
#          script: |-
#            whoami
#            cd deploy
#            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker-compose up -d

      - name: deploy app
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |-
            whoami
            cd deploy
            docker-compose down
            docker-compose up -d


      # ========= REMOVING INACTIVE IMAGES ============
      - name: Removing Images
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            docker system prune -a -f
